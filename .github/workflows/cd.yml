name: CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Development Server
        if: github.ref_name == 'dev'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          port: ${{ secrets.DEV_SERVER_SSH_PORT }}
          env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
            SPRING_IMAGE_TAG: 'dev'
            DEV_SPRING_PORT: ${{ secrets.DEV_SPRING_PORT }}
            DEV_MYSQL_DATABASE_URL: jdbc:mysql://dev-mysql-container:3306/${{ secrets.DEV_MYSQL_DATABASE }}
            DEV_MYSQL_USERNAME: ${{ secrets.DEV_MYSQL_USERNAME }}
            DEV_MYSQL_PASSWORD: ${{ secrets.DEV_MYSQL_PASSWORD }}
            DEV_MYSQL_DATABASE: ${{ secrets.DEV_MYSQL_DATABASE }}
            DEV_MYSQL_ROOT_PASSWORD: ${{ secrets.DEV_MYSQL_ROOT_PASSWORD }}
            DEV_MYSQL_PORT: ${{ secrets.DEV_MYSQL_PORT }}
            DEV_REDIS_PORT: ${{ secrets.DEV_REDIS_PORT }}
          script: |
            cd /path/to/your/docker-compose/files
            export DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
            export DOCKERHUB_PASSWORD=${DOCKERHUB_PASSWORD}
            export SPRING_IMAGE_TAG=${SPRING_IMAGE_TAG}
            export DEV_SPRING_PORT=${DEV_SPRING_PORT}
            export DEV_MYSQL_DATABASE_URL=${DEV_MYSQL_DATABASE_URL}
            export DEV_MYSQL_USERNAME=${DEV_MYSQL_USERNAME}
            export DEV_MYSQL_PASSWORD=${DEV_MYSQL_PASSWORD}
            export DEV_MYSQL_DATABASE=${DEV_MYSQL_DATABASE}
            export DEV_MYSQL_ROOT_PASSWORD=${DEV_MYSQL_ROOT_PASSWORD}
            export DEV_MYSQL_PORT=${DEV_MYSQL_PORT}
            export DEV_REDIS_PORT=${DEV_REDIS_PORT}
            # DEV_REDIS_HOST는 하드코딩되어 있으므로 export하지 않아도 됩니다.
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml pull spring-starter-kit
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d

      - name: Deploy to Production Server
        if: github.ref_name == 'main'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH_KEY }}
          port: ${{ secrets.PROD_SERVER_SSH_PORT }}
          env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
            SPRING_IMAGE_TAG: 'prod'
            PROD_SPRING_PORT: ${{ secrets.PROD_SPRING_PORT }}
            PROD_MYSQL_DATABASE_URL: jdbc:mysql://prod-mysql-container:3306/${{ secrets.PROD_MYSQL_DATABASE }}
            PROD_MYSQL_USERNAME: ${{ secrets.PROD_MYSQL_USERNAME }}
            PROD_MYSQL_PASSWORD: ${{ secrets.PROD_MYSQL_PASSWORD }}
            PROD_MYSQL_DATABASE: ${{ secrets.PROD_MYSQL_DATABASE }}
            PROD_MYSQL_ROOT_PASSWORD: ${{ secrets.PROD_MYSQL_ROOT_PASSWORD }}
            PROD_MYSQL_PORT: ${{ secrets.PROD_MYSQL_PORT }}
            PROD_REDIS_PORT: ${{ secrets.PROD_REDIS_PORT }}
          script: |
            cd /path/to/your/docker-compose/files
            export DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
            export DOCKERHUB_PASSWORD=${DOCKERHUB_PASSWORD}
            export SPRING_IMAGE_TAG=${SPRING_IMAGE_TAG}
            export PROD_SPRING_PORT=${PROD_SPRING_PORT}
            export PROD_MYSQL_DATABASE_URL=${PROD_MYSQL_DATABASE_URL}
            export PROD_MYSQL_USERNAME=${PROD_MYSQL_USERNAME}
            export PROD_MYSQL_PASSWORD=${PROD_MYSQL_PASSWORD}
            export PROD_MYSQL_DATABASE=${PROD_MYSQL_DATABASE}
            export PROD_MYSQL_ROOT_PASSWORD=${PROD_MYSQL_ROOT_PASSWORD}
            export PROD_MYSQL_PORT=${PROD_MYSQL_PORT}
            export PROD_REDIS_PORT=${PROD_REDIS_PORT}
            # PROD_REDIS_HOST는 하드코딩되어 있으므로 export하지 않아도 됩니다.
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml pull spring-starter-kit
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

